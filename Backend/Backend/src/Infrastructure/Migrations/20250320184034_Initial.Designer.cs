// <auto-generated />
using System;
using Backend.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backend.src.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250320184034_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backend.Shared.Entities.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("TypeString")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0195b4db-6f40-7aaa-b868-f269fed2336a"),
                            CreatedAt = new DateTime(2022, 8, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 8, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cartão de Crédito",
                            Type = 0,
                            TypeString = "Despesa",
                            Value = 825.82m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-7e49-a80c-36e06b0615c9"),
                            CreatedAt = new DateTime(2022, 8, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 8, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Curso C#",
                            Type = 0,
                            TypeString = "Despesa",
                            Value = 200.00m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-72b8-8d89-4a6099919a3e"),
                            CreatedAt = new DateTime(2022, 8, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 8, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Salário",
                            Type = 1,
                            TypeString = "Receita",
                            Value = 7000.00m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-7a11-8bee-e9780f7d7a81"),
                            CreatedAt = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mercado",
                            Type = 0,
                            TypeString = "Despesa",
                            Value = 3000.00m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-748c-8c5e-d3343d030da8"),
                            CreatedAt = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Farmácia",
                            Type = 0,
                            TypeString = "Despesa",
                            Value = 300.00m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-703f-b92d-0df9acba6e59"),
                            CreatedAt = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Combustível",
                            Type = 0,
                            TypeString = "Despesa",
                            Value = 800.25m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-7857-a036-80a6a7fbb5dd"),
                            CreatedAt = new DateTime(2022, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Financiamento Carro",
                            Type = 0,
                            TypeString = "Despesa",
                            Value = 900.00m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-7d93-9b66-da43af0df875"),
                            CreatedAt = new DateTime(2022, 9, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 9, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Financiamento Casa",
                            Type = 0,
                            TypeString = "Despesa",
                            Value = 1200.00m
                        },
                        new
                        {
                            Id = new Guid("0195b4db-6f40-774b-b696-9cc94077f8d8"),
                            CreatedAt = new DateTime(2022, 9, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2022, 9, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Freelance Projeto XPTO",
                            Type = 1,
                            TypeString = "Receita",
                            Value = 2500.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
